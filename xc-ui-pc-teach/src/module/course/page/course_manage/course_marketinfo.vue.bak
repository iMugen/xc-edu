<template xmlns="http://www.w3.org/1999/html">
  <div>
    <el-form :model="courseMarketForm" :rules="courseMarketFormRules" label-width="100px" ref="courseMarketForm">
      <el-form-item label="课程价格" prop="charge">
        <b v-for="charge in chargeList">
          <el-radio :label="charge.sdId" style="height: 17px;width: 75px" v-model="courseMarketForm.charge">
            {{charge.sdName}}
          </el-radio>
        </b>
        </br>金额（元）：
        <el-input placeholder="请输入内容" v-model="courseMarketForm.price"></el-input>
      </el-form-item>
      <el-form-item label="课程有效期" prop="valid">
        <b v-for="valid in validList">
          <el-radio :label="valid.sdId" style="width: 115px" v-model="courseMarketForm.valid">{{valid.sdName}}
          </el-radio>
        </b>
        </br>过期时间：
        <div class="mc-window">
          <el-date-picker :clearable="true" :editable="true" format="yyyy-MM-dd" type="date"
                          v-model="courseMarketForm.startTime"></el-date-picker>
          <el-date-picker :clearable="true" :editable="true" format="yyyy-MM-dd" type="date"
                          v-model="courseMarketForm.endTime"></el-date-picker>
        </div>
      </el-form-item>
      <el-form-item label="服务咨询QQ">
        <el-input placeholder="请输入内容" v-model="courseMarketForm.advisory">
        </el-input>
      </el-form-item>
      <el-form-item>
        <el-button @click="saveCourseMarketing" type="primary">提交</el-button>
      </el-form-item>
    </el-form>
    <!--    <div class="dialog-footer" slot="footer">-->
    <!--      <el-button :loading="editLoading" @click.native="save" type="primary">提交</el-button>-->
    <!--    </div>-->
  </div>
</template>
<script>
    import * as courseApi from '../../api/course';
    import * as systemApi from '../../../../base/api/system';

    export default {
        data() {
            return {
                courseId: '',
                chargeList: [],
                validList: [],
                courseMarketForm: {
                    charge: '',
                    valid: '',
                    input: '',
                    startTime: '',
                    endTime: '',
                    price: '',
                    advisory: '',
                    courseId: this.courseId,
                },
                courseMarketFormRules: {
                    charge: [
                        {required: true, message: '请选择收费规则', trigger: 'change'}
                    ],
                    valid: [
                        {required: true, message: '请选择有效期', trigger: 'blur'}
                    ],
                    name: [
                        {required: true, message: '请输入活动名称', trigger: 'blur'}
                    ]
                },
            }
        },

        methods: {


            saveCourseMarketing() {
                // this.$refs.courseMarketForm.validate((valid) => {
                //     debugger
                //     alert('ok');
                //     courseApi.addCourseMarketing(this.courseId, this.courseMarketForm);
                // });
                this.$refs.courseMarketForm.validate((valid) => {
                    if (valid) {
                        this.$confirm('确认提交吗？', '提示', {}).then(() => {
                            courseApi.updateCourseMarket(this.courseid, this.courseMarketForm).then((res) => {
                                this.editLoading = false;
                                if (res.success) {
                                    this.$message.success('提交成功');
                                    if (this.dotype == '1') {
                                        //跳转到课程图片
                                        this.$router.push({path: '/course/add/plan/3/1/' + this.courseid})
                                    }
                                } else {
                                    this.$message.error('提交失败');
                                }
                            });
                        });
                    }
                });
            }
            /*
                        save() {
                            //修改课程
                            this.$refs.courseForm.validate((valid) => {
                                if (valid) {
                                    this.$confirm('确认提交吗？', '提示', {}).then(() => {
                                        this.editLoading = true;
                                        let mt = this.categoryActive[0];
                                        let st = this.categoryActive[1];
                                        this.courseForm.mt = mt;
                                        this.courseForm.st = st;
                                        let id = this.courseForm.id
                                        courseApi.updateCoursebase(id, this.courseForm).then((res) => {
                                            this.editLoading = false;
                                            if (res.success) {
                                                this.$message({
                                                    message: '提交成功',
                                                    type: 'success'
                                                });
                                            } else {
                                                if (res.message) {
                                                    this.$message.error(res.message);
                                                } else {
                                                    this.$message.error('提交失败');
                                                }
                                            }
                                        });
                                    });
                                }
                            });
                        }
            */
        },
        created() {

        },
        mounted() {
            this.courseId = this.$route.params.courseId;
            //查询数据字典字典
            systemApi.sys_Dictionary('203').then((res) => {
                this.chargeList = res.dvalue;
            });
            systemApi.sys_Dictionary('204').then((res) => {
                this.validList = res.dvalue;
            });

        }
    }
</script>
<style scoped>


</style>
